- name: Login to GCR repo
  shell: echo {{ helm['password'] }} | base64 -d | helm registry login {{ helm['host'] }} --username {{ helm['user'] }} --password-stdin
  no_log: true

- name: Probe bitnami repo
  command: helm repo add bitnami https://charts.bitnami.com/bitnami
  when: not (repos.stdout | from_json | json_query("[?name==`bitnami`]"))
  register: add_bitnami
  until: add_bitnami is not failed
  retries: 3
  delay: 3

- name: Probe Newrelic Namespace
  command: kubectl get ns {{ newrelic['namespace'] }}
  changed_when: false
  ignore_errors: yes
  register: rancher_monitoring

- name: Create Newrelic namespace
  command: kubectl create namespace {{ newrelic['namespace'] }}
  when: rancher_monitoring is failed

- name: Migrate chart to Helm 3
  command: helm 2to3 convert --ignore-already-migrated kube-state-metrics

- name: Install Kube State Metrics
  command: >
    helm upgrade kube-state-metrics bitnami/kube-state-metrics
      --install
      --namespace {{ newrelic['namespace'] }}
      --set securityContext.enabled=true
      --set securityContext.runAsUser=65534
      --set securityContext.fsGroup=65534
  when: not (charts.stdout | from_json | json_query("[?name==`kube-state-metrics`]"))

- name: Migrate chart to Helm 3
  command: helm 2to3 convert --ignore-already-migrated nri-bundle

- name: Install Newrelic Services
  command: >
    helm upgrade nri-bundle oci://{{ helm['host'] }}/{{ helm['namespace'] }}/{{ newrelic['service_name'] }}
      --install
      --namespace {{ newrelic['namespace'] }}
      --version {{ newrelic['service_version'] }}
      --set global.licenseKey="{{ newrelic['licensekey'] }}"
      --set global.cluster="rancher"
      --set newrelic-infrastructure.enabled=true
      --set newrelic-infrastructure.rbac.pspEnabled=true
      --set newrelic-infrastructure.networkPolicy.create=true
      --set newrelic-infrastructure.resources.limits.memory=128Mi
      --set newrelic-infrastructure.resources.requests.cpu=100m
      --set newrelic-infrastructure.resources.requests.memory=30Mi
      --set kubeEvents.enabled=true
      --set newrelic-events.networkPolicy.create=true
      --set newrelic-events.resources.limits.memory=128Mi
      --set newrelic-events.resources.requests.cpu=100m
      --set newrelic-events.resources.requests.memory=128Mi
      --set logging.enabled=true
      --set newrelic-logging.rbac.pspEnabled=true
      --set newrelic-logging.networkPolicy.enabled=true
      --set newrelic-logging.resources.limits.memory=256Mi
      --set newrelic-logging.resources.requests.cpu=100m
      --set newrelic-logging.resources.requests.memory=30Mi
      --set prometheus.enabled=true
      --set newrelic-open-metrics.resources.limits.cpu=1
      --set newrelic-open-metrics.resources.limits.memory=1Gi
      --set newrelic-open-metrics.resources.requests.cpu=100m
      --set newrelic-open-metrics.resources.requests.memory=30Mi
      --description='Deploy Newrelic services'
      --set newrelic-infrastructure.customAttributes="'{\"clusterName\":\"$(CLUSTER_NAME)\"\,\"role\":\"rancher\"}'"
      --wait
      --timeout 600s
  when: not (charts.stdout | from_json | json_query("[?name==`nri-bundle`]"))
