version: 2.1

executors:
  default:
    docker:
      - image: cimg/python:3.9
    environment:
      AWSCLI_VERSION: 1.25.24
      TERRAFORM_VERSION: 1.2.4
      ANSIBLE_VERSION: 2.13.1
      RANCHER_PASSWORD: thisisanewadminpassword

commands:
  install_ansible:
    description: "Install Ansible"
    steps:
      - run:
          name: Install Ansible & Dependencies
          command: pip install ansible-core==$ANSIBLE_VERSION
      - run:
          name: Install Ansible Packages
          command: ansible-galaxy install -r ansible/requirements.yml

  install_terraform:
    description: Install Terraform
    steps:
      - run:
          name: Install Terraform
          command: |
            wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
            sudo unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin

  launch_e2e:
    description: "Launch an e2e test using an AWS Lightsail VPS"
    parameters:
      blueprint_id:
        type: string
      ssh_user:
        type: string
    steps:
    - run: '[[ $CIRCLE_BRANCH != "master" && -z $CIRCLE_PULL_REQUEST ]] && circleci step halt || true'
    - checkout
    - install_ansible
    - add_ssh_keys:
        fingerprints:
          - "5a:19:ae:e7:ef:98:4f:2f:68:c3:be:72:62:f9:1d:35"
    - run:
        name: Install system requirements
        command: |
          pip install awscli==$AWSCLI_VERSION --upgrade
    - run:
        name: Configure test env name
        command: echo 'export INSTANCE_NAME="ranchhand-$CIRCLE_WORKFLOW_JOB_ID-$CIRCLE_BUILD_NUM"' >> $BASH_ENV
    - run:
        name: Create test env
        command: |
          SSH_USER=<< parameters.ssh_user >> \
          INSTANCE_BLUEPRINT_ID=<< parameters.blueprint_id >> \
          INSTANCE_TAGS="key=Repo,value=$CIRCLE_REPOSITORY_URL key=Branch,value=$CIRCLE_BRANCH key=Commit,value=$CIRCLE_SHA1 key=BuildUrl,value=$CIRCLE_BUILD_URL" \
          test/e2e/run.sh setup
    - run:
        name: Execute Ansible Ranchhand
        command: |
          ansible-playbook \
            -i "$(cat private-instance-ip)," \
            --user << parameters.ssh_user >> \
            -e 'cert_names=DNS:test.dominodatalab.com' \
            -e 'node_count=1' \
            --private-key=~/.ssh/id_rsa_a4d238e594137d6a2ec652c68f7f0e6b \
            --ssh-common-args="-o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o ProxyCommand=\"ssh -o StrictHostKeyChecking=no -W %h:%p -q << parameters.ssh_user >>@$(cat instance-ip)\"" \
            ansible/prod.yml --diff
    - run:
        name: Teardown test env
        when: always
        command: test/e2e/run.sh teardown

jobs:
  lint:
    description: "Check Ansible Syntax"
    executor: default
    steps:
      - checkout
      - install_terraform
      - run:
          name: Terraform fmt
          command: terraform fmt -check
      - run:
          name: Terraform validate
          command: |
            terraform init
            terraform validate
      - install_ansible
      - run:
          name: Check Ansible Syntax
          command: ansible-playbook -i '127.0.0.1,' ansible/prod.yml --syntax-check
  e2e_centos:
    executor: default
    steps:
    - launch_e2e:
        ssh_user: centos
        blueprint_id: centos_7_1901_01
  e2e_ubuntu:
    executor: default
    steps:
    - launch_e2e:
        ssh_user: ubuntu
        blueprint_id: ubuntu_16_04_2
  e2e_ubuntu18:
    executor: default
    steps:
    - launch_e2e:
        ssh_user: ubuntu
        blueprint_id: ubuntu_18_04
  e2e_ubuntu20:
    executor: default
    steps:
    - launch_e2e:
        ssh_user: ubuntu
        blueprint_id: ubuntu_20_04

workflows:
  version: 2
  ansible_integrations:
    jobs:
    - lint
    - e2e_centos:
        requires:
        - lint
    - e2e_ubuntu:
        requires:
        - lint
    - e2e_ubuntu18:
        requires:
        - lint
    - e2e_ubuntu20:
        requires:
        - lint
