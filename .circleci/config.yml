version: 2.1

executors:
  default:
    docker:
      - image: cimg/python:3.9
    environment:
      TERRAFORM_VERSION: 1.2.4
      RANCHER_PASSWORD: thisisanewadminpassword

orbs:
  aws-cli: circleci/aws-cli@3.1.1

commands:
  install_ansible:
    description: "Install Ansible"
    parameters:
      version:
        type: string
        default: 2.13.3
      jmespath_version:
        type: string
        default: 1.0.1
    steps:
      - run:
          name: Install Ansible & Dependencies
          command: pip install ansible-core==<< parameters.version >> jmespath==<< parameters.jmespath_version >>
      - run:
          name: Install Ansible Packages
          command: ansible-galaxy install -r ansible/requirements.yml

  install_terraform:
    description: Install Terraform
    steps:
      - run:
          name: Install Terraform
          command: |
            wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
            sudo unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin

  upgrade_test:
    description: "Test upgrades from previous ranchhand versions"
    parameters:
      from_version:
        type: string
        default: 0.3.3
      ami_id:
        type: string
      ssh_user:
        type: string
    steps:
    # - run: '[[ $CIRCLE_BRANCH != "master" && -z $CIRCLE_PULL_REQUEST ]] && circleci step halt || true'
    - checkout
    - add_ssh_keys:
        fingerprints:
          - "5a:19:ae:e7:ef:98:4f:2f:68:c3:be:72:62:f9:1d:35"
    - aws-cli/install
    - install_terraform
    - run:
        name: Configure test env name
        command: echo 'export INSTANCE_NAME="ranchhand-$CIRCLE_WORKFLOW_JOB_ID-$CIRCLE_BUILD_NUM"' >> $BASH_ENV
    - run:
        name: Create test env
        command: |
          export SSH_USER=<< parameters.ssh_user >>
          export INSTANCE_AMI_ID=<< parameters.ami_id >>
          export INSTANCE_TAGS="{\"Repo\": \"$CIRCLE_REPOSITORY_URL\", \"Branch\": \"$CIRCLE_BRANCH\", \"Commit\": \"$CIRCLE_SHA1\", \"BuildUrl\": \"$CIRCLE_BUILD_URL\"}"
          test/e2e/run.sh setup

    - run:
        name: Run install of << parameters.from_version >>
        command: |
          pip install ansible==2.8.6 "jinja2<3.0.0" "markupsafe<2.0.0"

          wd="ranchhand-<< parameters.from_version >>"
          curl -sSfL https://github.com/dominodatalab/ranchhand/archive/refs/tags/v<< parameters.from_version >>.tar.gz | tar xz
          cd "$wd"

          patch -p1 < ../test/ranchhand-0.3.3.patch

          ansible-playbook \
            -i "$(cat ../test/private-instance-ip)," \
            --user << parameters.ssh_user >> \
            -e 'cert_names=DNS:test.dominodatalab.com' \
            -e 'node_count=1' \
            --private-key=~/.ssh/id_rsa_5a19aee7ef984f2f68c3be7262f91d35 \
            --ssh-common-args="-o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o ProxyCommand=\"ssh -o StrictHostKeyChecking=no -W %h:%p -q << parameters.ssh_user >>@$(cat ../test/instance-ip)\"" \
            ansible/prod.yml --diff

          pip uninstall -y ansible
    - install_ansible
    - run:
        name: Execute Ansible Ranchhand
        command: |
          ansible-playbook \
            -i "$(cat test/private-instance-ip)," \
            --user << parameters.ssh_user >> \
            -e 'cert_names=DNS:test.dominodatalab.com' \
            -e 'node_count=1' \
            --private-key=~/.ssh/id_rsa_5a19aee7ef984f2f68c3be7262f91d35 \
            --ssh-common-args="-o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o ProxyCommand=\"ssh -o StrictHostKeyChecking=no -W %h:%p -q << parameters.ssh_user >>@$(cat test/instance-ip)\"" \
            ansible/prod.yml --diff

    - run:
        name: Teardown test env
        when: always
        command: test/e2e/run.sh teardown

  launch_e2e:
    description: "Launch an e2e test using an AWS Lightsail VPS"
    parameters:
      ami_id:
        type: string
      ssh_user:
        type: string
    steps:
      # - run: '[[ $CIRCLE_BRANCH != "master" && -z $CIRCLE_PULL_REQUEST ]] && circleci step halt || true'
    - checkout
    - add_ssh_keys:
        fingerprints:
          - "5a:19:ae:e7:ef:98:4f:2f:68:c3:be:72:62:f9:1d:35"
    - aws-cli/install
    - install_terraform
    - install_ansible
    - run:
        name: Configure test env name
        command: echo 'export INSTANCE_NAME="ranchhand-$CIRCLE_WORKFLOW_JOB_ID-$CIRCLE_BUILD_NUM"' >> $BASH_ENV
    - run:
        name: Create test env
        command: |
          export SSH_USER=<< parameters.ssh_user >>
          export INSTANCE_AMI_ID=<< parameters.ami_id >>
          export INSTANCE_TAGS="{\"Repo\": \"$CIRCLE_REPOSITORY_URL\", \"Branch\": \"$CIRCLE_BRANCH\", \"Commit\": \"$CIRCLE_SHA1\", \"BuildUrl\": \"$CIRCLE_BUILD_URL\"}"
          test/e2e/run.sh setup
    - run:
        name: Execute Ansible Ranchhand
        command: |
          ansible-playbook \
            -i "$(cat test/private-instance-ip)," \
            --user << parameters.ssh_user >> \
            -e 'cert_names=DNS:test.dominodatalab.com' \
            -e 'node_count=1' \
            --private-key=~/.ssh/id_rsa_5a19aee7ef984f2f68c3be7262f91d35 \
            --ssh-common-args="-o StrictHostKeyChecking=no -o StrictHostKeyChecking=no -o ProxyCommand=\"ssh -o StrictHostKeyChecking=no -W %h:%p -q << parameters.ssh_user >>@$(cat test/instance-ip)\"" \
            ansible/prod.yml --diff
    - run:
        name: Teardown test env
        when: always
        command: test/e2e/run.sh teardown

jobs:
  lint:
    description: "Check Ansible Syntax"
    executor: default
    steps:
      - checkout
      - install_terraform
      - run:
          name: Terraform fmt
          command: terraform fmt -check
      - run:
          name: Terraform validate
          command: |
            terraform init
            terraform validate
      - install_ansible
      - run:
          name: Check Ansible Syntax
          command: ansible-playbook -i '127.0.0.1,' ansible/prod.yml --syntax-check
  e2e_centos:
    executor: default
    steps:
    - launch_e2e:
        ssh_user: centos
        ami_id: centos7
  e2e_ubuntu20:
    executor: default
    steps:
    - launch_e2e:
        ssh_user: ubuntu
        ami_id: ubuntu_focal
  upgrade_test:
    executor: default
    steps:
    - upgrade_test:
        ssh_user: ubuntu
        ami_id: ubuntu_xenial

workflows:
  version: 2
  ansible_integrations:
    jobs:
    - lint
    - upgrade_test
    - e2e_centos:
        requires:
        - lint
    - e2e_ubuntu20:
        requires:
        - lint
